plugins {
    id 'com.github.kt3k.coveralls' version '2.6.3'
    id 'info.solidsoft.pitest' version '1.3.0'
}

apply plugin: 'groovy'
apply plugin: 'codenarc'
apply plugin: 'jacoco'

group="$group"
version = 1.0

ext.groovy_version = project.hasProperty('groovy_version') ? project.getProperty('groovy_version') : '2.4.15'

compileGroovy.options.encoding = 'UTF-8'

sourceSets {
    main {
        groovy {
            srcDirs = ['src']
        }
    }

    test {
        groovy {
            srcDirs = ['test']
        }
    }
}

codenarc {
    toolVersion = "1.2.1"
}

codenarcMain {
    ignoreFailures false
    configFile file('config/codenarc/codenarc.rules')
}

codenarcTest {
    ignoreFailures false
    configFile file('config/codenarc/codenarc.rules')
}

jacoco {
    toolVersion = '0.8.1'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        html.destination file("${buildDir}/reports/coverage")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.83
            }
        }
    }
}

test {
    failFast = true
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    testLogging {
        exceptionFormat = 'full'
    }
}

pitest {
    pitestVersion = '1.4.2'
    targetClasses = ['my.tools.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
}

repositories {
    mavenCentral()
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'jenkins-shared-library as jar',  
                   'Implementation-Version': version,
                   'Main-Class': 'my.dsl.Runner'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovy_version}"
    compile 'commons-cli:commons-cli:1.4'

    testCompile 'junit:junit:4.12'
    testCompile 'pl.pragmatists:JUnitParams:1.1.1'
    testCompile 'org.assertj:assertj-core:3.11.0'
    testCompile 'org.yaml:snakeyaml:1.8'
}

jacocoTestCoverageVerification.dependsOn jacocoTestReport
check.dependsOn jacocoTestCoverageVerification
check.finalizedBy 'pitest', 'fatJar'


defaultTasks 'check'
